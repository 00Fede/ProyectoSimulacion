usar smote

decidir cuantas

definir porcentajes

ir aumentando el porcentaje (hasta 15%)

sobre el conjunto de entrenamiento. 

mirar sensibilidad y especifidad

one hot encoding cuando no son niveles

------

Uso de Smote

porcentaje de muestras de clase 1 original = 6.5789473684211%
porcentaje de muestras de clase 0 original = 93.4210526315790%

Sin duda se requiere SMOTE

con th = 0.3 y 5 vecinos positivos
2912 muestras resultantes, 328 muestras artificiales
clase 0 = 70%
Clase 1 = 30%

Ya ahi menos desbalance, pruebo si configurando parametros puede conseguirse algo mejor

th=0.15 num_vecinos = 5

2920 muestras --- no hay muchos cambios con el anterior

th=0.30 num_vecinos = 8

clase 0 = 58%
clase 1 = 42%

Muestras muy balanceadas, es dificil verificar si el smote fue realizado correctamente, se
deja en consideración de la funcion y sus parametros.


-------
Seleccion de Variables

Se descartan inicialmente columnas 15,16,17 ya que su indice de correlacion es tan bajo que produce
NaNs en los metodos de seleccion

////////////Segun matriz Correlacion pearson

variables con mas correlacion: 1,3,4,6,7,10,11,12

//////////////Indice de fisher, se busca que sea grande

Indice de Fisher: 
0.18931    0.003835     0.65611     0.65611   0.0054881     0.31171     0.70074   0.0047453    0.023118      1.2174     0.91192     0.75604     0.10108  0.00017952    0.067269    0.030474
Indice de Fisher Normalizado: 
0.1555   0.0031502     0.53895     0.53895   0.0045081     0.25605     0.57562   0.0038979     0.01899           1     0.74908     0.62104    0.083032  0.00014746    0.055257    0.025032

Segun fisher, variables con mas correlacion son cols 3,4,7,10,11,12.

// Corriendo SFS

Final columns included:  1 2 4 6 9 11 16 
La eficiencia obtenida fue = 0.93631 +- 0.011498

// Algoritmo Genetico
Utilizando funcion forest para la evaluacion. metodo de seleccion parece ser seleccion proporcional o ranking

1 2 4 5 6 9 11 16

La eficiencia obtenida fue = 0.93207 +- 0.010076


//Usando extraccion de caracteristicas PCA
Se seleccionaron 7 componentes principales

//LASSO no es usado
La eficiencia obtenida fue = 0.87534 +- 0.018337

------ Tirar modelos

Inicialmente tiramos estos modelos con el dataset sobremuestreado con smotes,
ya que sabemos que si lo tiramos no van a dar buenos resultados debido al desbalance.
Lo tiramos también con la codificación, peroooo sin selecciónn/extracción de caracterisiticas
para poder comparar luegos los resultados. capichi.

las columnas 15,16,17 del dataset tienen varianza cero, esto afecta la ejecución de algunos
modelos, por tanto se remueven.


--->> Tirar funciones discriminantes gaussianas
Intente tirar fitcdiscr con CrossVal On pero no supe hacer la implementacion
Se tira implementación segun el profe, de 10 kfolds.

La eficiencia obtenida de funciones discr. gauss. es 0.92412 +-0.026465









